We added a minimal visualizations of each step in the game by writing the game board states throughout the game to a file named gameSteps_<filename>.txt.
The filename is derived from the input file name.

Related Code in GameBoard.cpp:
printBoard():
Called during each game loop iteration to capture the current board state.
Converts the grid into a string representation and appends it to boardStates.
Uses symbols like 1, 2, #, @, S, and spaces to represent game elements.

boardStates Vector:
Stores the string representations of the board at each turn.
Populated by printBoard() and cleared by writeBoardStates() after writing to the file.

Related Code in GameManager.cpp:
runGameLoop():
Calls currGameState->printBoard() in each iteration of the game loop to update boardStates.
endGame():
Calls currGameState->writeBoardStates(outputFile) to write the accumulated board states to a file before the game ends.